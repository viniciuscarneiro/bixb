version: "3"

services:
 
  database:
    image: 'postgres:13.1-alpine'
    container_name: bixb-database
    restart: always
    tty: true
    ports: 
      - "5432:5432"
    environment:
      - POSTGRES_USER=bixb
      - POSTGRES_PASSWORD=bixb
      - POSTGRES_DB=bixb
    volumes: 
      - ./postgresql-data:/var/lib/postgresql/data
      - ./create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - net
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - net
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "bixb_topic:1:1"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - net
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  crud-api:
    image: 'brito/crud-api:latest'
    build:
      context: ./crud-api
      args:
        - JAR_FILE=build/libs/\*.jar      
    container_name: crud-api
    depends_on:
      - kafka
      - database
    tty: true      
    stdin_open: true
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - net
    ports: 
      - "8080:8080"

  producer-api:
    image: 'brito/producer-api:latest'
    build:
      context: ./producer-api
      args:
        - JAR_FILE=build/libs/\*.jar
    container_name: producer-api
    depends_on:
      - kafka
    tty: true
    stdin_open: true
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - net
    ports: 
      - "8081:8080"

networks:
  net:
    driver: bridge     